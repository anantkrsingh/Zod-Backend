// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id        String     @id @default(uuid())
  imageURL  String
  prompt    String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime   @default(now())
  creations Creation[]
}

model Creation {
  id           String    @id @default(uuid())
  createdBy    User      @relation(fields: [userId], references: [id])
  userId       String
  image        Image     @relation(fields: [imageId], references: [id])
  imageId      String
  likes        User[]    @relation("CreationLikes")
  comments     Comment[]
  displayImage String?
  createdAt    DateTime  @default(now())
}

model Comment {
  id         String   @id @default(uuid())
  comment    String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  creation   Creation @relation(fields: [creationId], references: [id])
  creationId String
}

model User {
  id             String     @id @default(uuid())
  name           String
  email          String     @unique
  password       String?
  profileUrl     String?
  provider       Provider   @default(EMAIL)
  tokens         Int        @default(4)
  premiumTokens  Int        @default(4)
  createdAt      DateTime   @default(now())
  creations      Creation[]
  comments       Comment[]
  likedCreations Creation[] @relation("CreationLikes")
  images         Image[]
}

model Avatar {
  id       String @id @default(uuid())
  imageUrl String
}

enum Provider {
  EMAIL
  GOOGLE
}
